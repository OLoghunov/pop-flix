services:

  backend:
    build: .
    container_name: fastapi_app
    depends_on:
      - db
      - rabbitmq
      - redis
    env_file:
      - .env.docker
    ports:
      - "8000:8000"
    command: ["sh", "-c", "alembic upgrade head && uvicorn src:app --host 0.0.0.0 --port 8000"]
    networks:
      - backend

  recommendation-service:
    build: ../recommendation-service
    ports:
      - "8001:8000"
    networks:
      - backend

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    restart: always
    env_file:
      - .env.docker
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend

  celery_worker:
    build: .
    container_name: celery_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    env_file:
      - .env.docker
    command: ["celery", "-A", "src.celery_tasks.c_app", "worker", "-l", "info", "-P", "threads"]
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
