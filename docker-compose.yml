services:
  backend:
    build: .
    container_name: fastapi_app
    depends_on:
      - db
      - rabbitmq
      - redis
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@db:5432/popflix
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    command: ["sh", "-c", "alembic upgrade head && uvicorn src:app --host 0.0.0.0 --port 8000"]

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: popflix
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    restart: always
    ports:
      - "5672:5672"   # Main port RabbitMQ
      - "15672:15672" # Web-based management interface
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    container_name: celery_worker
    depends_on:
      - rabbitmq
      - redis
      - backend
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@db:5432/popflix
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: ["celery", "-A", "src.celery_tasks.c_app", "worker", "-l", "info", "-P", "threads"]

volumes:
  postgres_data:
